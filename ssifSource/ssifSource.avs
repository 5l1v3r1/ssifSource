SA_DEMUXER = 0
SA_MUXER   = 1
SA_DECODER = 2

# function proto:
#
# ssifSource(
#   string ssif_file,                                   # path to ssif file
#   int frame_count,                                    # precise framecount
#   bool avc_view = true,                               # whether to show base view
#   bool mvc_view = true,                               # whether to show dependent view. If 'false' then muxer stage skipped (MVCCombine is not used)
#   bool horizontal_stack = false,                      # whether to stack both views horizontally or vertically
#   bool swap_views = false,                            # whether to exchange views positions (top/bottom, left/right)
#   string intel_params = "-d3d",                       # addiditional params for intel decoder. if the first symbol is not '-', then
#                                                       # you also should specify video type (mpeg2|h264|vc1|mvc|jpeg)
#   bool debug = false,                                 # whether to show debug consoles
#   int use_ldecod = true,                              # whether to use JM decoder instead Intel decoder
#   string avc264 = <using_autogenerated_pipename>,     # filenames to dump intermediate data (or import data into the pipeline)
#   string mvc264 = <using_autogenerated_pipename>,
#   string muxed264 = <using_autogenerated_pipename>,
#   int width = 1920,                                   # necessary if you don't use demuxer step (ssif_file is not spicified)
#   int height = 1080,                                  #    you should specify avc264 and/or mvc264 or muxed264 parameter then
#   int stop_after = SA_DECODER                         # stop pipeline at any part (for dumping intermediate data)
# );
#
# mplsSource(
#   string mpls_file,               # path to mpls file
#   int ssif_path,                  # path where ssif files is placed (isn't necessary, if you specify mpls file at bluray disc)
#   bool left_view = true,			# same as for ssifSource: these parameters below delivered unchanged to ssifSource function
#   bool right_view = true,
#   bool horizontal_stack = false,
#   bool swap_views = <autodetect>,
#   string intel_params = "-d3d",
#   bool debug = false,
#   int use_ldecod = true,
# );

# mplsSource2(
#   ------------------------
#   same as for mplsSource
#   ------------------------
#	int width = 1920,				# frame size is required parameter for mplsSource2
#	int height = 1080,
# );

# NOTICE:
# 1. swap_views flag  applies even if one view is shown. It just swaps avc_view/mvc_view (left_view/right_view) values correctly.
#    So, if you specify (avc_view = false & mvc_view = true & swap_views = true) -> avc_view will be shown!
# 2. avc_view & mvc_view was renamed for mplsSource because of misleading rules.
#    Now you can just leave swap_views unspecified and the correct view (left/right) will be showed according info about swapping on blu-ray disc.
#    In framestack left view goes first (top or left). For example, if you want AVC view, set left_view = true & swap_views = false.
# 3. when mplsSource is used the error message about what frame is should be decoded next contains wrong frame number.
# 4. not all mpls files may be processed correctly (see diagnostic info for what ssif(m2ts) files is used for playing mpls file).
# 5. You can also try to set 'use_ldecod' parameter a different value if decoding fails.
# 6. mplsSource2 uses tsMuxer.exe instead MPEGSplitter_mod.ax

LoadPlugin("c:\Program Files (x86)\ssifSource\bin\LoadHelper.dll")
LoadPlugin("ssifSource.dll")

#ssifSource("..\samples\ISO\BDMV\STREAM\SSIF\00001.ssif", 465)

#mplsSource("..\samples\ISO\BDMV\PLAYLIST\00001.mpls", right_view = false)

mplsSource2("f:\BDMV\PLAYLIST\00001.mpls", use_ldecod = true, width = 1920, height = 1080)
